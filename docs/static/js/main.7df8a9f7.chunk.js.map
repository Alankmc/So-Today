{"version":3,"sources":["components/action-text/action-builders/ActionBuilder.js","components/action-text/action-builders/ShareBuilder.js","components/action-text/action-builders/ChallengeBuilder.js","components/action-text/action-builders/ArtistBuidler.js","components/action-text/action-builders/ViolenceBuilder.js","components/action-text/ActionText.js","components/comment-text/CommentText.js","components/config-pane/game-buttons/GameButtons.js","components/config-pane/ConfigPane.js","components/app/App.js","serviceWorker.js","index.js"],"names":["PLAYERS","ActionBuilder","currParams","Object","classCallCheck","this","obj","_this","keys","reduce","total","curr","concat","player","playerless","playerPool","reduceBasedOnParams","playerlessPool","actionIndex","Math","floor","random","length","value","isPlayerless","info","getMeFromArray","arr","ShareBuilder","possibleConstructorReturn","getPrototypeOf","call","name","playerlessActions","base","no_library","icebreak","actions","chosenAction","getAction","fullAction","getPlayer","get","prototype","ChallengeBuilder","ArtistBuidler","singActionPlayerless","actActionPlayerless","actActions","singActions","singInfo","actingInfoSingle","actingInfoDouble","isSing","ViolenceBuilder","violence","ACTIONS","ActionText","state","actionText","textClick","thisActionText","thisAction","builders","buildAction","props","clickTick","setState","gameParams","share","challenge","artist","brokenText","breakText","react_default","a","createElement","id","className","onClick","map","text","Fragment","breaker","split","currIndex","currArr","thisArr","i","push","join","React","Component","commentary","CommentText","_this$props","shouldRender","overrideText","el","document","getElementById","classList","remove","offsetWidth","add","defaultProps","undefined","GameButton","label","callback","type","on","off","ConfigPane","handleConfigClick","isConfigOpen","everClicked","flipClass","GameButtons_GameButton","VIKING_MASTER_CHANCE","QUESTION_MASTER_CHANCE","App","handleParamClick","key","newParams","objectSpread","defineProperty","clickTickHandler","_this$state","isViking","isQuestion","ticked","_this$state2","tickOnce","ConfigPane_ConfigPane","ActionText_ActionText","CommentText_CommentText","Boolean","window","location","hostname","match","ReactDOM","render","components_app_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7df8a9f7.chunk.js","sourcesContent":["const PLAYERS = [\n  'the player to your right',\n  'the player to your left',\n  'the player across from you',\n  'the youngest player',\n  'the oldest player',\n  'the strongest player',\n  'the hottest player',\n  'the tallest player',\n  'the shortest player',\n  'the last player',\n  'your date',\n  'your friend',\n];\n\nexport default class ActionBuilder {\n  constructor(currParams) {\n    this.currParams = currParams;\n  }\n\n  static getMeFromArray(arr) {\n    return arr[Math.floor(Math.random() * arr.length)];\n  }\n\n  static getMe(obj) {\n    const keys = Object.keys(obj);\n    return ActionBuilder.getMeFromArray(keys);\n  }\n\n  reduceBasedOnParams(obj) {\n    const pool = Object.keys(obj).reduce((total, curr) => {\n      if (this.currParams[curr]) {\n        return total.concat(obj[curr]);\n      }\n      return total;\n    }, []);\n    return pool;\n  }\n\n  getAction(player, playerless) {\n    const playerPool = this.reduceBasedOnParams(player);\n    const playerlessPool = this.reduceBasedOnParams(playerless);\n    const actionIndex = Math.floor(Math.random() * (playerlessPool.length + playerPool.length));\n    if (actionIndex >= playerPool.length) {\n      return {\n        value: playerlessPool[actionIndex - playerPool.length],\n        isPlayerless: true,\n      };\n    }\n    return {\n      value: playerPool[actionIndex],\n      isPlayerless: false,\n    };\n  }\n\n  getInfo(info) {\n    return ActionBuilder.getMeFromArray(this.reduceBasedOnParams(info));\n  }\n\n  static getPlayer() {\n    return ActionBuilder.getMeFromArray(PLAYERS);\n  }\n}\n","import ActionBuilder from './ActionBuilder';\n\nexport default class ShareBuilder extends ActionBuilder {\n  constructor(currParams) {\n    super(currParams);\n\n    this.name = 'Share';\n    this.playerlessActions = {\n      base: ['Share with the group'],\n      no_library: ['Yell out'],\n      icebreak: [\n        'Tell a stranger',\n        'Text you tinder crush',\n        'Text someone on your contact list',\n      ],\n    };\n\n    this.actions = {\n      base: ['Whisper in the ear of'],\n    };\n\n    this.info = {\n      base: [\n        'how your last shit was, in grand detail',\n        'something noone in the group knows',\n        'your favorite pokemon',\n        'the name of your least favorite person in the group',\n        'who you\\'re voting for',\n      ],\n    };\n  }\n\n  buildAction() {\n    const chosenAction = this.getAction(this.actions, this.playerlessActions);\n\n    let fullAction = chosenAction.value;\n    if (!chosenAction.isPlayerless) {\n      fullAction += ` ${ActionBuilder.getPlayer()}`;\n    }\n    fullAction += ` ${super.getInfo(this.info)}.`;\n\n    return fullAction;\n  }\n}\n","import ActionBuilder from './ActionBuilder';\n\nexport default class ChallengeBuilder extends ActionBuilder {\n  constructor(currParams) {\n    super(currParams);\n\n    this.name = 'Challenge';\n    this.playerlessActions = {\n      icebreak: [\n        'Challenge a stranger',\n      ],\n    };\n    this.actions = {\n      base: ['Challenge'],\n    };\n\n    this.info = {\n      base: [\n        'to an arm wrestle',\n        'to a chugging competition',\n        'to a pushup competition',\n        'to a 100m sprint',\n        'to a friendly wrestle',\n        'to a \"don\\'t breathe\" race',\n        'to a \"don\\'t laugh\" race',\n      ],\n    };\n  }\n\n  buildAction() {\n    const chosenAction = this.getAction(this.actions, this.playerlessActions);\n\n    let fullAction = chosenAction.value;\n    if (!chosenAction.isPlayerless) {\n      fullAction += ` ${ActionBuilder.getPlayer()}`;\n    }\n    fullAction += ` ${super.getInfo(this.info)}!!`;\n\n    return fullAction;\n  }\n}\n","import ActionBuilder from './ActionBuilder';\n\nconst SING_ACT_RATIO = 0.3;\n\nexport default class ArtistBuidler extends ActionBuilder {\n  constructor(currParams) {\n    super(currParams);\n\n    this.name = 'Artist';\n    this.singActionPlayerless = {\n      base: [\n        'Sing',\n        'Invent on the spot',\n        'Dance to',\n        'Dance absurdly energetically to',\n      ],\n      no_library: [\n        'Scream out',\n      ],\n    };\n    this.actActionPlayerless = {\n      base: [\n        'Act out',\n      ],\n    };\n    this.actActions = {\n      base: [\n        'Act out',\n      ],\n    };\n    this.singActions = {\n      base: [\n        'Duet to',\n      ],\n    };\n\n    this.singInfo = {\n      base: [\n        'the national anthem',\n        'a very emo song',\n        'a country song',\n        'a sad song',\n        'a song in another language',\n        'The Killers\\' Mr. Brightside',\n      ],\n    };\n\n    this.actingInfoSingle = {\n      base: [\n        'the death of a loved one',\n        'your drink being poisoned',\n        'slipping on a banana',\n        'receiving the greates gift of your goddamn life',\n        'receiving horrible news',\n        'discovering you won the lottery',\n        'going fishing',\n      ],\n    };\n\n    this.actingInfoDouble = {\n      base: [\n        'your marriage proposal',\n        'finding out you two are pregnant',\n        'your breakup',\n        'two bros in the gym',\n        'two straight guys at the bar',\n      ],\n      no_library: [\n        'going into labor',\n        'a loud, almost-violent argument',\n      ],\n    };\n  }\n\n  buildAction() {\n    const isSing = Math.random() < SING_ACT_RATIO;\n    let chosenAction;\n\n    if (isSing) {\n      chosenAction = this.getAction(this.singActions, this.singActionPlayerless);\n    } else {\n      chosenAction = this.getAction(this.actActions, this.actActionPlayerless);\n    }\n\n    let fullAction = chosenAction.value;\n\n    if (isSing) {\n      fullAction += ` ${super.getInfo(this.singInfo)}`;\n    } else if (chosenAction.isPlayerless) {\n      fullAction += ` ${super.getInfo(this.actingInfoSingle)}`;\n    } else {\n      fullAction += ` ${super.getInfo(this.actingInfoDouble)}`;\n    }\n\n    if (!chosenAction.isPlayerless) {\n      fullAction += `, with ${ActionBuilder.getPlayer()} as co-star.`;\n    }\n\n    return fullAction;\n  }\n}\n","import ActionBuilder from './ActionBuilder';\n\nexport default class ViolenceBuilder extends ActionBuilder {\n  constructor(currParams) {\n    super(currParams);\n\n    this.name = 'Violence';\n    this.playerlessActions = {};\n    this.actions = {\n      base: ['Poke'],\n      violence: [\n        'Punch',\n        'Kick',\n        'Slap',\n      ],\n    };\n\n    this.info = {\n      base: [\n        'in the face',\n        'on the arm',\n        'on the head',\n        'on the leg',\n        'on the ear',\n        'on the foot',\n      ],\n      violence: [\n        'in the face',\n        'on the arm',\n        'on the head',\n        'on the leg',\n        'on the ear',\n        'on the foot',\n      ],\n    };\n  }\n\n  buildAction() {\n    const chosenAction = this.getAction(this.actions, this.playerlessActions);\n\n    let fullAction = chosenAction.value;\n    if (!chosenAction.isPlayerless) {\n      fullAction += ` ${ActionBuilder.getPlayer()}`;\n    }\n    fullAction += ` ${super.getInfo(this.info)}!`;\n\n    return fullAction;\n  }\n}\n","import React from 'react';\nimport ShareBuilder from './action-builders/ShareBuilder';\nimport ChallengeBuilder from './action-builders/ChallengeBuilder';\nimport ArtistBuidler from './action-builders/ArtistBuidler';\nimport ViolenceBuilder from './action-builders/ViolenceBuilder';\nimport './ActionText.css';\n\nconst ACTIONS = ['share', 'challenge', 'artist', 'violence'];\nconst BREAK_AT = 5;\n\nexport default class ActionText extends React.Component {\n  static breakText(text) {\n    const breaker = text.split(' ');\n    let currIndex = 0;\n    const currArr = [];\n    while (currIndex - breaker.length) {\n      const thisArr = [];\n      for (let i = 0; i < BREAK_AT; i += 1) {\n        if (currIndex === breaker.length) {\n          break;\n        }\n        thisArr.push(breaker[currIndex]);\n        currIndex += 1;\n      }\n      currArr.push(thisArr.join(' '));\n    }\n\n    return currArr;\n  }\n\n  state = {\n    actionText: 'Click me. I know you want to.',\n  };\n\n  static getMeFromArray(arr) {\n    return arr[Math.floor(Math.random() * arr.length)];\n  }\n\n  textClick = () => {\n    const thisAction = ActionText.getMeFromArray(ACTIONS);\n    let thisActionText;\n    switch (thisAction) {\n      case 'share':\n      case 'challenge':\n      case 'artist':\n      case 'violence':\n        // Challenge has as ACTION - (PLAYER) - TEXT - INFO structure\n        thisActionText = this.builders[thisAction].buildAction();\n        break;\n      default:\n        thisActionText = 'Uh whoops hang on';\n        break;\n    }\n    this.props.clickTick();\n    this.setState({ actionText: thisActionText });\n  }\n\n  render() {\n    const { gameParams } = this.props;\n    const { actionText } = this.state;\n    this.builders = {\n      share: new ShareBuilder(gameParams),\n      challenge: new ChallengeBuilder(gameParams),\n      artist: new ArtistBuidler(gameParams),\n      violence: new ViolenceBuilder(gameParams),\n    };\n\n    const brokenText = ActionText.breakText(actionText);\n\n    return (\n      <div id=\"action-text\" className=\"action-text-container\">\n        <span\n          onClick={this.textClick}\n          id=\"action-text--span\"\n          className=\"action-text\"\n        >\n          {brokenText.map(text => (<>{text}<br /></>))}\n        </span>\n        <br />\n      </div>\n    );\n  }\n}\n","/* global document */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './CommentText.css';\n\nconst commentary = [\n  'ohhh yes, right there',\n  'booop',\n  'yes daddy click me harder',\n  'a friendly task for a friendly person',\n  'i can see you through the webcammmm',\n  'yea, click it',\n  'oh my',\n  'you can do it',\n  'you have my blessing',\n  'speak friend, and do the task',\n  'are you drunk yet',\n  'now with 100% more floating text',\n  'if only your parents could see you now',\n  'don\\'t chicken out',\n  'uh oh',\n  'come on, faster',\n  'come on, do it',\n  'great scott',\n  'hurry hurry',\n  'this hurts me more than it hurts you',\n  'i\\'d hate to say it but... you did click it',\n  'come on, this one\\'s easy',\n  'task smoke... don\\'t breathe this',\n  'hey can you lend me some cash',\n  'why don\\'t you uber home, bud',\n  'you shouldn\\'t do this. on second thought, you should',\n  'uhhhh your turn',\n  'should i be naked for this',\n  'toasty!',\n  'god can see all your sinning',\n  'trust me',\n  'oh would you look at at that great idea right there',\n  'well paint me green and call me a pickle',\n  'uhhh it wasn\\'t me',\n  'hold on let me get my camera',\n  'twitter says hello',\n  'turn down for actually what though',\n  'get that bread',\n  'yooo hoooo',\n  'yeeeeeeeeee hawwwwwww',\n];\nexport default class CommentText extends React.Component {\n  static getMeFromArray(arr) {\n    return arr[Math.floor(Math.random() * arr.length)];\n  }\n\n  render() {\n    const { shouldRender, overrideText } = this.props;\n    if (!shouldRender) {\n      return null;\n    }\n    const el = document.getElementById('comment-text-span');\n    if (el) {\n      el.classList.remove('animate');\n      void el.offsetWidth; // eslint-disable-line\n      el.classList.add('animate');\n    }\n    return (\n      <span className=\"comment-text animate\" id=\"comment-text-span\">\n        {overrideText || CommentText.getMeFromArray(commentary)}\n      </span>\n    );\n  }\n}\n\nCommentText.propTypes = {\n  shouldRender: PropTypes.bool.isRequired,\n  overrideText: PropTypes.string,\n};\n\nCommentText.defaultProps = {\n  overrideText: undefined,\n};\n","import React from 'react';\nimport './GameButton.css';\n\nexport default function GameButton(props) {\n  const {\n    label, callback, value, type,\n  } = props;\n  return (\n    <span\n      className={`game-button-span ${value ? '' : 'off'}`}\n      onClick={() => callback(type, !value)}\n    >\n      {value ? label.on : label.off}\n    </span>\n  );\n}\n","import React from 'react';\nimport GameButton from './game-buttons/GameButtons';\nimport './ConfigPane.css';\n\nexport default class ConfigPane extends React.Component {\n  constructor() {\n    super();\n    this.everClicked = false;\n    this.state = {\n      isConfigOpen: false,\n    };\n  }\n\n  handleConfigClick = () => {\n    const { isConfigOpen } = this.state;\n    this.everClicked = true;\n    this.setState({ isConfigOpen: !isConfigOpen });\n  }\n\n  render() {\n    const { gameParams, callback } = this.props;\n    const { isConfigOpen } = this.state;\n    let flipClass;\n\n    if (!this.everClicked) {\n      flipClass = 'config-button';\n    } else {\n      flipClass = `config-button ${isConfigOpen ? 'flipped' : 'unflipped'}`;\n    }\n\n    return (\n      <div className=\"config-pane\">\n        <div\n          className={flipClass}\n        >\n          <span\n            onClick={this.handleConfigClick}\n          >\n            {isConfigOpen ? 'Hide configure' : 'Show configure'}\n          </span>\n        </div>\n\n        <div className={`button-container ${isConfigOpen ? 'open' : ''}`}>\n          <GameButton\n            label={{ on: 'I LOVE YELLING', off: 'shh we\\'re at the library' }}\n            callback={callback}\n            type=\"no_library\"\n            value={gameParams.no_library}\n          />\n          <GameButton\n            label={{ on: 'Linkedin master', off: 'Blushing introvert' }}\n            callback={callback}\n            type=\"icebreak\"\n            value={gameParams.icebreak}\n          />\n          <GameButton\n            label={{ on: 'F*ck\\'em up', off: 'Be nice to your friends, Timmy' }}\n            callback={callback}\n            type=\"violence\"\n            value={gameParams.violence}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ActionText from '../action-text/ActionText';\nimport CommentText from '../comment-text/CommentText';\nimport ConfigPane from '../config-pane/ConfigPane';\nimport './App.css';\n\nconst VIKING_MASTER_CHANCE = 0.2;\nconst QUESTION_MASTER_CHANCE = 0.1;\nconst COMMENTARY_CHANCE = 1;\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.ticked = false;\n    this.state = {\n      gameParams: {\n        base: true,\n        no_library: false,\n        icebreak: false,\n        violence: false,\n      },\n      isViking: false,\n      isQuestion: false,\n    };\n  }\n\n  handleParamClick = (key, value) => {\n    const { gameParams } = this.state;\n    const newParams = {\n      ...gameParams,\n      [key]: value,\n    };\n    this.setState({ gameParams: newParams });\n  }\n\n  clickTickHandler = () => {\n    const { isViking, isQuestion } = this.state;\n\n    this.setState({\n      isViking: isViking ? false : Math.random() < VIKING_MASTER_CHANCE,\n      isQuestion: isQuestion ? false : Math.random() < QUESTION_MASTER_CHANCE,\n    });\n    this.ticked = true;\n  }\n\n  render() {\n    const {\n      isViking, isQuestion, gameParams,\n    } = this.state;\n\n    const tickOnce = this.ticked;\n    if (this.ticked) {\n      this.ticked = false;\n    }\n\n    return (\n      <div id=\"root-app\" className=\"App\">\n        <ConfigPane gameParams={gameParams} callback={this.handleParamClick} />\n        <ActionText gameParams={gameParams} clickTick={this.clickTickHandler} />\n        {isQuestion ? (<div><span className=\"event-span\">Player has become Questionmaster</span><br /></div>) : null}\n        {isViking ? (<div><span className=\"event-span lower\">Player has become Vikingmaster</span><br /></div>) : null}\n        <CommentText shouldRender={tickOnce && Math.random() < COMMENTARY_CHANCE} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* global document */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}